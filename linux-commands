Linux Prompts:
   $ --> Normal User
   # --> Root User (Administrator)**
   
Switch Normal user to Administrator --> su -   
  fallowed by root password credentials navigates to root user.
  
Linux Command Standard Syntax:
Command-name {options} {inputs} 

Dot (.) denotes present working directory 
DotDot(..) denotes parent directory

Options:
    - <Single-Character>
    -- <Single-Word>

    Ex: uname --help

Information Commands:

$ date --> Display date
$ cal --> Display Calendar
$ clear --> To clear the screen
$ ls --> list of items
# ls <optional> <file / dir / path>
Optional:
-a --all (Hidden files)
-d --directory
-l --use a long listing format
-r --reverse
-R --recursive
-s --size
-t sort by modification time
# ls *
(* - All)
# ls ? ( ? - one character)

Directory commands:

$ mkdir --> create new directory 
        $ mkdir <dir>
        $ mkdir -p <dir1 path> <dir2 path>...
$ rmdir --> remove empty directory
        $ rmdir <dir>
$ cd --> change directory 
        $ cd <dir path>
$ pwd --> present working directory 

File manipulation commands:

$ touch --> Its create empty files
        $ touch <f1> <f2> <f3>...
        $ touch <filename> {1..100}
$cat --> create new file, appending(added information into existed file) and copy
        $ cat <f1> <f2> <f3>......
        $ cat > filename
        $ cat >> filename
$ vi --> visual editor  
        $ vi <file-name>
        esc + : wq! (save and quit)
        esc + : q! (without save and quit)
        esc + : x!(save)
        esc + i (insert mode )
        esc + yy (line copy)
        esc + <num> + yy ( number of line copy)
        esc + dd(delete line)
        esc + <num> + dd (number of delete line)
        esc + p(paste)
        esc + D(delete end of the line from )
        esc + o(new line)
        esc + r(one character replace )
        esc + R(replace mode )
        esc + : %s/<old word>/<new word>

$ gedit --> Graphical Editor 
        $ gedit <file-name>

$ cp --> coping of file to file, file to directory, directory to directory
        $ cp <old file-name><create file-name>
        eg: cp VenuKannuri VenuK
        
$ mv --> Moving of file to file, file to directory, directory to directory and also rename
        $ mv <old file-name><new file-name>
        eg: mv VenuKannuri VenuK
  ** If destination does not exists: Rename the directory
    ** If destination exists:
         -> Destination is a file:
                Invalid operation
         -> Destination is a Directory:
                File/Directory will move inside that directory
        
$ rm --> Removing of file, directory
        rm / rmdir (Empty Dir)
        $ rm -r dirname


    
 
